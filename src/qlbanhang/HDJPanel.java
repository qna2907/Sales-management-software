/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package qlbanhang;

import java.sql.*;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import source.DBKetnoi;

public class HDJPanel extends javax.swing.JPanel {

    final String header[] = {"MAHD", "LOAIHD", "MAKH", "MANV", "NGAYLAPHD", "NGAYNHAN", "DIENGIAI"};
    final DefaultTableModel tb = new DefaultTableModel(header, 0);
    DBKetnoi cn = new DBKetnoi();
    Connection conn;
    private ResultSet rs;

    public HDJPanel() {
        initComponents();
        loadBang();
    }

    public void loadBang() {
        try {
            conn = DBKetnoi.getConnection();
            int number;
            Vector row;
            String sql = "SELECT * FROM HOADON";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            tb.setRowCount(0);
            while (rs.next()) {
                row = new Vector();
                for (int i = 1; i <= number; i++) {
                    row.add(rs.getString(i));
                }
                tb.addRow(row);
                TableHD.setModel(tb);
            }
            st.close();
            rs.close();
            conn.close();
        } catch (Exception e) {
        }
        TableHD.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (TableHD.getSelectedRow() >= 0) {
                    txtmhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 0) + "");
                    txtlhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 1) + "");
                    txtmkh1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 2) + "");
                    txtmnv1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 3) + "");
                    txtnlhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 4) + "");
                    txtnn1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 5) + "");
                    txtdiengiai.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 6) + "");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnhd = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtmhd = new javax.swing.JTextField();
        txtlhd = new javax.swing.JTextField();
        txtmkh1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtnlhd = new javax.swing.JTextField();
        txtdiengiai = new javax.swing.JTextField();
        cmdthem3 = new javax.swing.JButton();
        cmdsua3 = new javax.swing.JButton();
        cmdxoa3 = new javax.swing.JButton();
        cmdtimkiem3 = new javax.swing.JButton();
        cmddau3 = new javax.swing.JButton();
        cmdtrai3 = new javax.swing.JButton();
        cmdphai3 = new javax.swing.JButton();
        cmdcuoi3 = new javax.swing.JButton();
        txtmnv1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableHD = new javax.swing.JTable();
        txtnn1 = new javax.swing.JTextField();
        cmdtailai3 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(890, 403));

        jpnhd.setBackground(new java.awt.Color(255, 255, 0));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("THÔNG TIN HÓA ĐƠN");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("Mã Hóa Đơn:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("Loại Hóa Đơn:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setText("Mã Khách Hàng:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setText("Mã Nhân Viên:");

        txtmhd.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtmhd.setForeground(new java.awt.Color(0, 204, 204));

        txtlhd.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtlhd.setForeground(new java.awt.Color(0, 204, 204));

        txtmkh1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtmkh1.setForeground(new java.awt.Color(0, 204, 204));
        txtmkh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmkh1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("Ngày Lập HD:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 51));
        jLabel7.setText("Ngày Nhận:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 51));
        jLabel8.setText("Diễn Giải:");

        txtnlhd.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtnlhd.setForeground(new java.awt.Color(0, 204, 204));

        txtdiengiai.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtdiengiai.setForeground(new java.awt.Color(0, 204, 204));

        cmdthem3.setBackground(new java.awt.Color(255, 0, 51));
        cmdthem3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdthem3.setForeground(new java.awt.Color(255, 255, 255));
        cmdthem3.setText("Thêm");
        cmdthem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdthem3ActionPerformed(evt);
            }
        });

        cmdsua3.setBackground(new java.awt.Color(102, 255, 102));
        cmdsua3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdsua3.setForeground(new java.awt.Color(255, 0, 51));
        cmdsua3.setText("Sửa");
        cmdsua3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdsua3ActionPerformed(evt);
            }
        });

        cmdxoa3.setBackground(new java.awt.Color(255, 204, 204));
        cmdxoa3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdxoa3.setText("Xóa");
        cmdxoa3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdxoa3ActionPerformed(evt);
            }
        });

        cmdtimkiem3.setBackground(new java.awt.Color(102, 255, 255));
        cmdtimkiem3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdtimkiem3.setForeground(new java.awt.Color(0, 51, 204));
        cmdtimkiem3.setText("Tìm Kiếm");
        cmdtimkiem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdtimkiem3ActionPerformed(evt);
            }
        });

        cmddau3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmddau3.setText("<<");
        cmddau3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmddau3ActionPerformed(evt);
            }
        });

        cmdtrai3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdtrai3.setText("<");
        cmdtrai3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdtrai3ActionPerformed(evt);
            }
        });

        cmdphai3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdphai3.setText(">");
        cmdphai3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdphai3ActionPerformed(evt);
            }
        });

        cmdcuoi3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdcuoi3.setText(">>");
        cmdcuoi3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdcuoi3ActionPerformed(evt);
            }
        });

        txtmnv1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtmnv1.setForeground(new java.awt.Color(0, 204, 204));
        txtmnv1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmnv1ActionPerformed(evt);
            }
        });

        TableHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "MAHD", "LOAIHD", "MAKH", "MANV", "NGAYLAPHD", "NGAYNHAN", "DIENGIAI"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableHDMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableHD);

        txtnn1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtnn1.setForeground(new java.awt.Color(0, 204, 204));

        cmdtailai3.setBackground(new java.awt.Color(255, 255, 51));
        cmdtailai3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdtailai3.setForeground(new java.awt.Color(204, 0, 255));
        cmdtailai3.setText("Tải Lại");
        cmdtailai3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdtailai3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnhdLayout = new javax.swing.GroupLayout(jpnhd);
        jpnhd.setLayout(jpnhdLayout);
        jpnhdLayout.setHorizontalGroup(
            jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnhdLayout.createSequentialGroup()
                .addGroup(jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnhdLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jLabel1))
                    .addGroup(jpnhdLayout.createSequentialGroup()
                        .addGroup(jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addGroup(jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtnlhd)
                            .addComponent(txtmkh1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtmhd)
                            .addComponent(txtlhd)
                            .addComponent(txtmnv1, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtdiengiai, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtnn1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmdthem3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmdsua3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmdxoa3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmdtimkiem3)
                            .addComponent(cmdtailai3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnhdLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(cmddau3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdtrai3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdphai3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdcuoi3)))
                .addContainerGap(238, Short.MAX_VALUE))
        );
        jpnhdLayout.setVerticalGroup(
            jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnhdLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtmhd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cmdthem3)
                    .addComponent(jLabel7)
                    .addComponent(txtnn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtlhd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cmdsua3)
                    .addComponent(jLabel8)
                    .addComponent(txtdiengiai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtmkh1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cmdxoa3))
                .addGap(7, 7, 7)
                .addGroup(jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtmnv1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdtimkiem3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdtailai3)
                    .addComponent(jLabel4)
                    .addComponent(txtnlhd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnhdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmddau3)
                    .addComponent(cmdtrai3)
                    .addComponent(cmdphai3)
                    .addComponent(cmdcuoi3))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnhd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnhd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
     public void xoatrang() {
        txtmhd.setText("");
        txtlhd.setText("");
        txtmkh1.setText("");
        txtmnv1.setText("");
        txtnlhd.setText("");
        txtnn1.setText("");
        txtdiengiai.setText("");
        loadBang();
        txtmhd.setEnabled(true);
    }
    private void txtmkh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmkh1ActionPerformed

    }//GEN-LAST:event_txtmkh1ActionPerformed

    private void txtmnv1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmnv1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmnv1ActionPerformed

    private void cmdthem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdthem3ActionPerformed
        try {
            conn = DBKetnoi.getConnection();
            if (txtmhd.getText().equals("") || txtlhd.getText().equals("") || txtmkh1.getText().equals("") || txtmnv1.getText().equals("") || txtnlhd.getText().equals("") || txtnn1.getText().equals("") || txtdiengiai.getText().equals("")) {
                JOptionPane.showConfirmDialog(this, "Bạn cần nhập đủ dữ liệu");
            } else {
                StringBuffer sb = new StringBuffer();
                String sql_check_pk = "SELECT MAHD FROM HOADON WHERE MAHD = N'" + txtmhd.getText() + "'";
                Statement st = conn.createStatement();
                rs = st.executeQuery(sql_check_pk);
                if (rs.next()) {
                    sb.append("Hóa đơn này đã tồn tại!");
                }
                if (sb.length() > 0) {
                    JOptionPane.showMessageDialog(this, sb.toString());
                } else {
                    String sql = "INSERT INTO HOADON VALUES(N'" + txtmhd.getText() + "',N'" + txtlhd.getText() + "',N'" + txtmkh1.getText() + "',N'" + txtmnv1.getText() + "','" + txtnlhd.getText() + "','" + txtnn1.getText() + "',N'" + txtdiengiai.getText() + "')";
                    st = conn.createStatement();
                    int kg = st.executeUpdate(sql);
                    if (kg > 0) {
                        JOptionPane.showMessageDialog(this, "Thêm mới thành công!");
                        xoatrang();
                    }
                }
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_cmdthem3ActionPerformed

    private void TableHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableHDMouseClicked
        int x = TableHD.getSelectedRow();
        if (x >= 0) {
            txtmhd.setText(TableHD.getValueAt(x, 0) + "");
            txtlhd.setText(TableHD.getValueAt(x, 1) + "");
            txtmkh1.setText(TableHD.getValueAt(x, 2) + "");
            txtmnv1.setText(TableHD.getValueAt(x, 3) + "");
            txtnlhd.setText(TableHD.getValueAt(x, 4) + "");
            txtnn1.setText(TableHD.getValueAt(x, 5) + "");
            txtdiengiai.setText(TableHD.getValueAt(x, 6) + "");
            txtmhd.setEnabled(false);
        }
    }//GEN-LAST:event_TableHDMouseClicked

    private void cmdsua3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdsua3ActionPerformed
        try {
            conn = DBKetnoi.getConnection();
            if (txtlhd.getText().equals("") || txtmkh1.getText().equals("") || txtmnv1.getText().equals("") || txtnlhd.getText().equals("") || txtnn1.getText().equals("") || txtdiengiai.getText().equals("")) {
                JOptionPane.showConfirmDialog(this, "Bạn cần nhập đủ dữ liệu");
            } else {
                Statement st = conn.createStatement();
                String sql = "UPDATE HOADON SET LOAIHD = N'" + txtlhd.getText() + "', MAKH = N'" + txtmkh1.getText() + "', MANV = N'" + txtmnv1.getText() + "', NGAYLAPHD = '" + txtnlhd.getText() + "', NGAYNHAN = '" + txtnn1.getText() + "', DIENGIAI = N'" + txtdiengiai.getText() + "' WHERE MAHD = N'" + txtmhd.getText() + "'";
                st = conn.createStatement();
                int kg = st.executeUpdate(sql);
                if (kg > 0) {
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
                    xoatrang();
                }
                st.close();
            }
            conn.close();
            rs.close();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cmdsua3ActionPerformed

    private void cmdxoa3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdxoa3ActionPerformed
        try {
            conn = DBKetnoi.getConnection();
            String sql = "DELETE HOADON WHERE MAHD = N'" + txtmhd.getText() + "'";
            Statement st = conn.createStatement();
            int chk = JOptionPane.showConfirmDialog(this, "Bạn có chắc xóa chứ?", "Thông báo", JOptionPane.YES_NO_OPTION);
            if (chk == JOptionPane.YES_NO_OPTION) {
                st.executeUpdate(sql);
                xoatrang();
                JOptionPane.showMessageDialog(this, "Xóa thành công!");
            }

        } catch (Exception e) {

        }
    }//GEN-LAST:event_cmdxoa3ActionPerformed
    public void getSelectFirst() {
        int selectedRow = 0;
        txtmhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 0) + "");
        txtlhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 1) + "");
        txtmkh1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 2) + "");
        txtmnv1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 3) + "");
        txtnlhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 4) + "");
        txtnn1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 5) + "");
        txtdiengiai.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 6) + "");
        TableHD.setRowSelectionInterval(0, 0);
    }

    public void getSelectPrevious() {
        if (TableHD.getSelectedRow() >= 1) {
            int selectedRow = TableHD.getSelectedRow() - 1;
            txtmhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 0) + "");
            txtlhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 1) + "");
            txtmkh1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 2) + "");
            txtmnv1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 3) + "");
            txtnlhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 4) + "");
            txtnn1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 5) + "");
            txtdiengiai.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 6) + "");
            TableHD.setRowSelectionInterval(selectedRow, selectedRow);
        }
    }

    public void getSelectNext() {
        if (TableHD.getSelectedRow() < TableHD.getRowCount() - 1) {
            int selectedRow = TableHD.getSelectedRow() + 1;
            txtmhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 0) + "");
            txtlhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 1) + "");
            txtmkh1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 2) + "");
            txtmnv1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 3) + "");
            txtnlhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 4) + "");
            txtnn1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 5) + "");
            txtdiengiai.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 6) + "");
            TableHD.setRowSelectionInterval(selectedRow, selectedRow);
        }
    }

    public void getSelectLast() {
        int selectedRow = TableHD.getRowCount() - 1;
        txtmhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 0) + "");
        txtlhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 1) + "");
        txtmkh1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 2) + "");
        txtmnv1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 3) + "");
        txtnlhd.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 4) + "");
        txtnn1.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 5) + "");
        txtdiengiai.setText(TableHD.getValueAt(TableHD.getSelectedRow(), 6) + "");
        TableHD.setRowSelectionInterval(selectedRow, selectedRow);
    }
    private void cmddau3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmddau3ActionPerformed
        getSelectFirst();
    }//GEN-LAST:event_cmddau3ActionPerformed

    private void cmdtrai3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdtrai3ActionPerformed
        getSelectPrevious();
    }//GEN-LAST:event_cmdtrai3ActionPerformed

    private void cmdphai3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdphai3ActionPerformed
        getSelectNext();
    }//GEN-LAST:event_cmdphai3ActionPerformed

    private void cmdcuoi3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdcuoi3ActionPerformed
        getSelectLast();
    }//GEN-LAST:event_cmdcuoi3ActionPerformed

    private void cmdtimkiem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdtimkiem3ActionPerformed
        int size = TableHD.getRowCount();
        String mahd = JOptionPane.showInputDialog(this, "Nhập vào Mã Hóa Đơn cần tìm:");
        for (int i = 0; i < size; i++) {
            if (TableHD.getValueAt(i, 0).toString().equalsIgnoreCase(mahd)) {
                JOptionPane.showMessageDialog(this, "Tìm kiếm thành công!");
                txtmhd.setEnabled(false);
                TableHD.setRowSelectionInterval(i, i);
                break;
            }
        }
    }//GEN-LAST:event_cmdtimkiem3ActionPerformed

    private void cmdtailai3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdtailai3ActionPerformed
        loadBang();
        xoatrang();
    }//GEN-LAST:event_cmdtailai3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableHD;
    private javax.swing.JButton cmdcuoi3;
    private javax.swing.JButton cmddau3;
    private javax.swing.JButton cmdphai3;
    private javax.swing.JButton cmdsua3;
    private javax.swing.JButton cmdtailai3;
    private javax.swing.JButton cmdthem3;
    private javax.swing.JButton cmdtimkiem3;
    private javax.swing.JButton cmdtrai3;
    private javax.swing.JButton cmdxoa3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jpnhd;
    private javax.swing.JTextField txtdiengiai;
    private javax.swing.JTextField txtlhd;
    private javax.swing.JTextField txtmhd;
    private javax.swing.JTextField txtmkh1;
    private javax.swing.JTextField txtmnv1;
    private javax.swing.JTextField txtnlhd;
    private javax.swing.JTextField txtnn1;
    // End of variables declaration//GEN-END:variables
}
