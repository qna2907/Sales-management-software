package qlbanhang;

import java.sql.*;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import source.DBKetnoi;

public class SPJPanel extends javax.swing.JPanel {

    final String header[] = {"MASP", "TENSP", "DONVITINH", "DONGIA", "SLTON"};
    final DefaultTableModel tb = new DefaultTableModel(header, 0);
    DBKetnoi cn = new DBKetnoi();
    Connection conn;
    private ResultSet rs;

    public SPJPanel() {
        initComponents();
        loadBang();
    }

    public void loadBang() {
        try {
            conn = DBKetnoi.getConnection();
            int number;
            Vector row;
            String sql = "SELECT * FROM SANPHAM";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            tb.setRowCount(0);
            while (rs.next()) {
                row = new Vector();
                for (int i = 1; i <= number; i++) {
                    row.add(rs.getString(i));
                }
                tb.addRow(row);
                TableSP.setModel(tb);
            }
            st.close();
            rs.close();
            conn.close();
        } catch (Exception e) {
        }
        TableSP.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (TableSP.getSelectedRow() >= 0) {
                    txtmsp.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 0) + "");
                    txttsp.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 1) + "");
                    txtdvt.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 2) + "");
                    txtdg.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 3) + "");
                    txtsl.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 4) + "");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnsp = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtmsp = new javax.swing.JTextField();
        txttsp = new javax.swing.JTextField();
        txtsl = new javax.swing.JTextField();
        txtdvt = new javax.swing.JTextField();
        txtdg = new javax.swing.JTextField();
        cmdthem2 = new javax.swing.JButton();
        cmdsua2 = new javax.swing.JButton();
        cmdxoa2 = new javax.swing.JButton();
        cmdtimkiem2 = new javax.swing.JButton();
        cmddau2 = new javax.swing.JButton();
        cmdtrai2 = new javax.swing.JButton();
        cmdphai2 = new javax.swing.JButton();
        cmdcuoi2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableSP = new javax.swing.JTable();
        cmdtailai2 = new javax.swing.JButton();

        jpnsp.setBackground(new java.awt.Color(204, 204, 251));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("THÔNG TIN SẢN PHẨM");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("Mã Sản Phẩm:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("Tên Sản Phẩm:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("Số Lượng:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 51));
        jLabel8.setText("Đơn Vị Tính:");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 51));
        jLabel9.setText("Đơn Giá:");

        txtmsp.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtmsp.setForeground(new java.awt.Color(0, 51, 51));

        txttsp.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txttsp.setForeground(new java.awt.Color(0, 51, 51));

        txtsl.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtsl.setForeground(new java.awt.Color(0, 51, 51));

        txtdvt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtdvt.setForeground(new java.awt.Color(0, 51, 51));

        txtdg.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtdg.setForeground(new java.awt.Color(0, 51, 51));

        cmdthem2.setBackground(new java.awt.Color(255, 0, 51));
        cmdthem2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdthem2.setForeground(new java.awt.Color(255, 255, 255));
        cmdthem2.setText("Thêm");
        cmdthem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdthem2ActionPerformed(evt);
            }
        });

        cmdsua2.setBackground(new java.awt.Color(102, 255, 102));
        cmdsua2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdsua2.setForeground(new java.awt.Color(255, 0, 51));
        cmdsua2.setText("Sửa");
        cmdsua2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdsua2ActionPerformed(evt);
            }
        });

        cmdxoa2.setBackground(new java.awt.Color(255, 204, 204));
        cmdxoa2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdxoa2.setText("Xóa");
        cmdxoa2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdxoa2ActionPerformed(evt);
            }
        });

        cmdtimkiem2.setBackground(new java.awt.Color(102, 255, 255));
        cmdtimkiem2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdtimkiem2.setForeground(new java.awt.Color(0, 51, 204));
        cmdtimkiem2.setText("Tìm Kiếm");
        cmdtimkiem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdtimkiem2ActionPerformed(evt);
            }
        });

        cmddau2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmddau2.setText("<<");
        cmddau2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmddau2ActionPerformed(evt);
            }
        });

        cmdtrai2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdtrai2.setText("<");
        cmdtrai2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdtrai2ActionPerformed(evt);
            }
        });

        cmdphai2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdphai2.setText(">");
        cmdphai2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdphai2ActionPerformed(evt);
            }
        });

        cmdcuoi2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdcuoi2.setText(">>");
        cmdcuoi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdcuoi2ActionPerformed(evt);
            }
        });

        TableSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MAPS", "TENSP", "SOLUONG", "DONVITINH", "DONGIA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableSPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableSP);

        cmdtailai2.setBackground(new java.awt.Color(255, 255, 51));
        cmdtailai2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdtailai2.setForeground(new java.awt.Color(204, 0, 255));
        cmdtailai2.setText("Tải Lại");
        cmdtailai2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdtailai2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnspLayout = new javax.swing.GroupLayout(jpnsp);
        jpnsp.setLayout(jpnspLayout);
        jpnspLayout.setHorizontalGroup(
            jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnspLayout.createSequentialGroup()
                .addGroup(jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnspLayout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(cmddau2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdtrai2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdphai2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdcuoi2))
                    .addGroup(jpnspLayout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(jpnspLayout.createSequentialGroup()
                                .addGroup(jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtdg, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtdvt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtsl, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txttsp, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtmsp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmdsua2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdthem2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdxoa2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdtimkiem2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdtailai2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        jpnspLayout.setVerticalGroup(
            jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnspLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnspLayout.createSequentialGroup()
                        .addGroup(jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txttsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtsl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtdvt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(jpnspLayout.createSequentialGroup()
                        .addComponent(cmdthem2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdsua2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdxoa2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdtimkiem2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtdg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(cmdtailai2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmddau2)
                    .addComponent(cmdtrai2)
                    .addComponent(cmdphai2)
                    .addComponent(cmdcuoi2))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnsp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnsp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    public void xoatrang() {
        txtmsp.setText("");
        txttsp.setText("");
        txtdvt.setText("");
        txtsl.setText("");
        txtdg.setText("");
        loadBang();
        txtmsp.setEnabled(true);
    }
    private void cmdxoa2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdxoa2ActionPerformed
        try {
            conn = DBKetnoi.getConnection();
            String sql = "DELETE SANPHAM WHERE MASP = N'" + txtmsp.getText() + "'";
            Statement st = conn.createStatement();
            int chk = JOptionPane.showConfirmDialog(this, "Bạn có chắc xóa chứ?", "Thông báo", JOptionPane.YES_NO_OPTION);
            if (chk == JOptionPane.YES_NO_OPTION) {
                st.executeUpdate(sql);
                xoatrang();
                JOptionPane.showMessageDialog(this, "Xóa thành công!");
            }

        } catch (Exception e) {

        }
    }//GEN-LAST:event_cmdxoa2ActionPerformed

    private void cmdthem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdthem2ActionPerformed
        try {
            conn = DBKetnoi.getConnection();
            if (txtmsp.getText().equals("") || txttsp.getText().equals("") || txtdvt.getText().equals("") || txtdg.getText().equals("") || txtsl.getText().equals("")) {
                JOptionPane.showConfirmDialog(this, "Bạn cần nhập đủ dữ liệu");
            } else {
                StringBuffer sb = new StringBuffer();
                String sql_check_pk = "SELECT MASP FROM SANPHAM WHERE MASP = N'" + txtmsp.getText() + "'";
                Statement st = conn.createStatement();
                rs = st.executeQuery(sql_check_pk);
                if (rs.next()) {
                    sb.append("Sản phẩm này đã tồn tại!");
                }
                if (sb.length() > 0) {
                    JOptionPane.showMessageDialog(this, sb.toString());
                } else {
                    String sql = "INSERT INTO SANPHAM VALUES(N'" + txtmsp.getText() + "',N'" + txttsp.getText() + "',N'" + txtdvt.getText() + "',N'" + txtdg.getText() + "',N'" + txtsl.getText() + "')";
                    st = conn.createStatement();
                    int kg = st.executeUpdate(sql);
                    if (kg > 0) {
                        JOptionPane.showMessageDialog(this, "Thêm mới thành công!");
                        xoatrang();
                    }
                }
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_cmdthem2ActionPerformed

    private void cmdsua2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdsua2ActionPerformed
        try {
            conn = DBKetnoi.getConnection();
            if (txttsp.getText().equals("") || txtdvt.getText().equals("") || txtsl.getText().equals("") || txtdg.getText().equals("")) {
                JOptionPane.showConfirmDialog(this, "Bạn cần nhập đủ dữ liệu");
            } else {
                Statement st = conn.createStatement();
                String sql = "UPDATE SANPHAM SET TENSP = N'" + txttsp.getText() + "', DONVITINH = N'" + txtdvt.getText() + "', DONGIA = N'" + txtdg.getText() + "', SLTON = N'" + txtsl.getText() + "' WHERE MASP = N'" + txtmsp.getText() + "'";
                st = conn.createStatement();
                int kg = st.executeUpdate(sql);
                if (kg > 0) {
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
                    xoatrang();
                }
                st.close();
            }
            conn.close();
            rs.close();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cmdsua2ActionPerformed

    private void cmdtimkiem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdtimkiem2ActionPerformed
        int size = TableSP.getRowCount();
        String masp = JOptionPane.showInputDialog(this, "Nhập vào Mã Sản Phẩm cần tìm:");
        for (int i = 0; i < size; i++) {
            if (TableSP.getValueAt(i, 0).toString().equalsIgnoreCase(masp)) {
                JOptionPane.showMessageDialog(this, "Tìm kiếm thành công!");
                txtmsp.setEnabled(false);
                TableSP.setRowSelectionInterval(i, i);
                break;
            }
        }
    }//GEN-LAST:event_cmdtimkiem2ActionPerformed

    private void TableSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableSPMouseClicked
        int x = TableSP.getSelectedRow();
        if (x >= 0) {
            txtmsp.setText(TableSP.getValueAt(x, 0) + "");
            txttsp.setText(TableSP.getValueAt(x, 1) + "");
            txtdvt.setText(TableSP.getValueAt(x, 2) + "");
            txtsl.setText(TableSP.getValueAt(x, 3) + "");
            txtdg.setText(TableSP.getValueAt(x, 4) + "");
            txtmsp.setEnabled(false);
        }
    }//GEN-LAST:event_TableSPMouseClicked
    public void getSelectFirst() {
        int selectedRow = 0;
        txtmsp.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 0) + "");
        txttsp.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 1) + "");
        txtdvt.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 2) + "");
        txtdg.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 3) + "");
        txtsl.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 4) + "");
        TableSP.setRowSelectionInterval(0, 0);
    }

    public void getSelectPrevious() {
        if (TableSP.getSelectedRow() >= 1) {
            int selectedRow = TableSP.getSelectedRow() - 1;
            txtmsp.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 0) + "");
            txttsp.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 1) + "");
            txtdvt.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 2) + "");
            txtdg.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 3) + "");
            txtsl.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 4) + "");
            TableSP.setRowSelectionInterval(selectedRow, selectedRow);
        }
    }

    public void getSelectNext() {
        if (TableSP.getSelectedRow() < TableSP.getRowCount() - 1) {
            int selectedRow = TableSP.getSelectedRow() + 1;
            txtmsp.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 0) + "");
            txttsp.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 1) + "");
            txtdvt.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 2) + "");
            txtdg.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 3) + "");
            txtsl.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 4) + "");
            TableSP.setRowSelectionInterval(selectedRow, selectedRow);
        }
    }

    public void getSelectLast() {
        int selectedRow = TableSP.getRowCount() - 1;
        txtmsp.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 0) + "");
        txttsp.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 1) + "");
        txtdvt.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 2) + "");
        txtdg.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 3) + "");
        txtsl.setText(TableSP.getValueAt(TableSP.getSelectedRow(), 4) + "");
        TableSP.setRowSelectionInterval(selectedRow, selectedRow);
    }
    private void cmddau2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmddau2ActionPerformed
        getSelectFirst();
    }//GEN-LAST:event_cmddau2ActionPerformed

    private void cmdtrai2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdtrai2ActionPerformed
        getSelectPrevious();
    }//GEN-LAST:event_cmdtrai2ActionPerformed

    private void cmdphai2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdphai2ActionPerformed
        getSelectNext();
    }//GEN-LAST:event_cmdphai2ActionPerformed

    private void cmdcuoi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdcuoi2ActionPerformed
        getSelectLast();
    }//GEN-LAST:event_cmdcuoi2ActionPerformed

    private void cmdtailai2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdtailai2ActionPerformed
        loadBang();
        xoatrang();
    }//GEN-LAST:event_cmdtailai2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableSP;
    private javax.swing.JButton cmdcuoi2;
    private javax.swing.JButton cmddau2;
    private javax.swing.JButton cmdphai2;
    private javax.swing.JButton cmdsua2;
    private javax.swing.JButton cmdtailai2;
    private javax.swing.JButton cmdthem2;
    private javax.swing.JButton cmdtimkiem2;
    private javax.swing.JButton cmdtrai2;
    private javax.swing.JButton cmdxoa2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpnsp;
    private javax.swing.JTextField txtdg;
    private javax.swing.JTextField txtdvt;
    private javax.swing.JTextField txtmsp;
    private javax.swing.JTextField txtsl;
    private javax.swing.JTextField txttsp;
    // End of variables declaration//GEN-END:variables
}
