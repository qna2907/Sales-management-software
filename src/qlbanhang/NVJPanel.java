/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package qlbanhang;

import java.sql.*;
import java.util.Vector;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import source.DBKetnoi;

/**
 *
 * @author admin
 */
public class NVJPanel extends javax.swing.JPanel {

    final String header[] = {"MANV", "HONV", "TENNV", "GIOITINH", "NGAYSINH", "NOISINH", "DIACHI", "SDT"};
    final DefaultTableModel tb = new DefaultTableModel(header, 0);
    DBKetnoi cn = new DBKetnoi();
    Connection conn;
    private ResultSet rs;

    public NVJPanel() {
        initComponents();
        loadBang();
    }

    public void loadBang() {
        //Load dữ liệu từ CSDL lên TableNHANVIEN
        try {
            conn = DBKetnoi.getConnection();
            int number;
            Vector row;
            String sql = "SELECT * FROM NHANVIEN";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            tb.setRowCount(0);
            while (rs.next()) {
                row = new Vector();
                for (int i = 1; i <= number; i++) {
                    row.add(rs.getString(i));
                }
                tb.addRow(row);
                TableNHANVIEN.setModel(tb);
            }
            st.close();
            rs.close();
            conn.close();
        } catch (Exception e) {
        }
        TableNHANVIEN.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                //Đổ dữ liệu từng dòng trong TableNHANVIEN lên các textbox(txt)
                if (TableNHANVIEN.getSelectedRow() >= 0) {
                    txtmnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 0) + "");
                    txthnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 1) + "");
                    txttnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 2) + "");
                    txtgt.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 3) + "");
                    txtns.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 4) + "");
                    txtnoisinh.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 5) + "");
                    txtdc.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 6) + "");
                    txtsdtnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 7) + "");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnnv = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtmnv = new javax.swing.JTextField();
        txthnv = new javax.swing.JTextField();
        txtns = new javax.swing.JTextField();
        txtdc = new javax.swing.JTextField();
        txtsdtnv = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtgt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmdthem1 = new javax.swing.JButton();
        cmdsua1 = new javax.swing.JButton();
        cmdxoa1 = new javax.swing.JButton();
        cmdtimkiem1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableNHANVIEN = new javax.swing.JTable();
        cmddau1 = new javax.swing.JButton();
        cmdtrai1 = new javax.swing.JButton();
        cmdphai1 = new javax.swing.JButton();
        cmdcuoi1 = new javax.swing.JButton();
        txtnoisinh = new javax.swing.JTextField();
        txttnv = new javax.swing.JTextField();
        cmdtailai1 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(554, 0));

        jpnnv.setBackground(new java.awt.Color(204, 204, 251));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("THÔNG TIN NHÂN VIÊN");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Mã Nhân Viên:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Họ Nhân Viên:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Ngày Sinh:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("Địa Chỉ:");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("SĐT:");

        txtmnv.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtmnv.setForeground(new java.awt.Color(0, 102, 102));

        txthnv.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txthnv.setForeground(new java.awt.Color(0, 102, 102));

        txtns.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtns.setForeground(new java.awt.Color(0, 102, 102));

        txtdc.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtdc.setForeground(new java.awt.Color(0, 102, 102));

        txtsdtnv.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtsdtnv.setForeground(new java.awt.Color(0, 102, 102));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Giới Tính:");

        txtgt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtgt.setForeground(new java.awt.Color(0, 102, 102));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Tên Nhân Viên:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Nơi Sinh:");

        cmdthem1.setBackground(new java.awt.Color(255, 0, 51));
        cmdthem1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdthem1.setForeground(new java.awt.Color(255, 255, 255));
        cmdthem1.setText("Thêm");
        cmdthem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdthem1ActionPerformed(evt);
            }
        });

        cmdsua1.setBackground(new java.awt.Color(102, 255, 102));
        cmdsua1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdsua1.setForeground(new java.awt.Color(255, 0, 51));
        cmdsua1.setText("Sửa");
        cmdsua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdsua1ActionPerformed(evt);
            }
        });

        cmdxoa1.setBackground(new java.awt.Color(255, 204, 204));
        cmdxoa1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdxoa1.setText("Xóa");
        cmdxoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdxoa1ActionPerformed(evt);
            }
        });

        cmdtimkiem1.setBackground(new java.awt.Color(102, 255, 255));
        cmdtimkiem1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdtimkiem1.setForeground(new java.awt.Color(0, 51, 204));
        cmdtimkiem1.setText("Tìm Kiếm");
        cmdtimkiem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdtimkiem1ActionPerformed(evt);
            }
        });

        TableNHANVIEN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "MANV", "HONV", "TENNV", "GT", "NGAYSINH", "NOISINH", "DIACHI", "SĐT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableNHANVIEN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableNHANVIENMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableNHANVIEN);

        cmddau1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmddau1.setText("<<");
        cmddau1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmddau1ActionPerformed(evt);
            }
        });

        cmdtrai1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdtrai1.setText("<");
        cmdtrai1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdtrai1ActionPerformed(evt);
            }
        });

        cmdphai1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdphai1.setText(">");
        cmdphai1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdphai1ActionPerformed(evt);
            }
        });

        cmdcuoi1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdcuoi1.setText(">>");
        cmdcuoi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdcuoi1ActionPerformed(evt);
            }
        });

        txtnoisinh.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtnoisinh.setForeground(new java.awt.Color(0, 102, 102));

        txttnv.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txttnv.setForeground(new java.awt.Color(0, 102, 102));

        cmdtailai1.setBackground(new java.awt.Color(255, 255, 51));
        cmdtailai1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmdtailai1.setForeground(new java.awt.Color(204, 0, 255));
        cmdtailai1.setText("Tải Lại");
        cmdtailai1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdtailai1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnnvLayout = new javax.swing.GroupLayout(jpnnv);
        jpnnv.setLayout(jpnnvLayout);
        jpnnvLayout.setHorizontalGroup(
            jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnnvLayout.createSequentialGroup()
                .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnnvLayout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(cmddau1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdtrai1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdphai1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdcuoi1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnnvLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpnnvLayout.createSequentialGroup()
                                .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpnnvLayout.createSequentialGroup()
                                        .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addGroup(jpnnvLayout.createSequentialGroup()
                                                .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtns, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtgt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txthnv, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtmnv, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txttnv, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(jpnnvLayout.createSequentialGroup()
                                                        .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel7)
                                                            .addComponent(jLabel8))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                            .addComponent(txtdc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtnoisinh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(jpnnvLayout.createSequentialGroup()
                                                        .addComponent(jLabel9)
                                                        .addGap(43, 43, 43)
                                                        .addComponent(txtsdtnv, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addComponent(jLabel4))
                                .addGap(6, 6, 6)
                                .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmdthem1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmdsua1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmdxoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmdtimkiem1)
                                    .addComponent(cmdtailai1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnnvLayout.setVerticalGroup(
            jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnnvLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtmnv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cmdthem1)
                    .addComponent(jLabel7)
                    .addComponent(txtnoisinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txthnv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cmdsua1)
                    .addComponent(jLabel8)
                    .addComponent(txtdc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txttnv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdxoa1)
                    .addComponent(txtsdtnv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(7, 7, 7)
                .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtgt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdtimkiem1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmdtailai1)
                        .addComponent(txtns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnnvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmddau1)
                    .addComponent(cmdtrai1)
                    .addComponent(cmdphai1)
                    .addComponent(cmdcuoi1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnnv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnnv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    public void xoatrang() {
        //Hàm này sẽ xóa trắng sau khi thêm sửa xóa
        txtmnv.setText("");
        txthnv.setText("");
        txttnv.setText("");
        txtgt.setText("");
        txtns.setText("");
        txtnoisinh.setText("");
        txtdc.setText("");
        txtsdtnv.setText("");
        loadBang();
        txtmnv.setEnabled(true);
    }
    private void cmdthem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdthem1ActionPerformed
        try {
            conn = DBKetnoi.getConnection();
            if (txtmnv.getText().equals("") || txthnv.getText().equals("") || txtgt.getText().equals("") || txtgt.getText().equals("") || txtns.getText().equals("") || txtnoisinh.getText().equals("") || txtdc.getText().equals("") || txtsdtnv.getText().equals("")) {
                /*Đây là bắt lỗi nhập dữ liệu
                Nếu như nó trống thì đưa ra thông báo ở sự kiện nút thêm
                 */
                JOptionPane.showConfirmDialog(this, "Bạn cần nhập đủ dữ liệu");
            } else {
                /*
                Nếu trên đã OK rồi thì bẫy lỗi trùng khóa chính
                 */
                StringBuffer sb = new StringBuffer();
                String sql_check_pk = "SELECT MANV FROM NHANVIEN WHERE MANV = N'" + txtmnv.getText() + "'";
                Statement st = conn.createStatement();
                rs = st.executeQuery(sql_check_pk);
                if (rs.next()) {
                    sb.append("Nhân viên này đã tồn tại!");
                }
                if (sb.length() > 0) {//Nếu if kia đúng nó sẽ thêm vào sb 1 đoạn String kt độ dài chuỗi này nếu >0 sẽ có thông báo
                    JOptionPane.showMessageDialog(this, sb.toString());
                } else {//Nếu không thì thêm
                    String sql = "INSERT INTO NHANVIEN VALUES(N'" + txtmnv.getText() + "',N'" + txthnv.getText() + 
                            "',N'" + txttnv.getText() + "',N'" + txtgt.getText() + "',N'" + txtns.getText() + "',N'" + txtnoisinh.getText() + 
                            "',N'" + txtdc.getText() + "',N'" + txtsdtnv.getText() + "')";
                    st = conn.createStatement();
                    int kg = st.executeUpdate(sql);
                    if (kg > 0) {
                        JOptionPane.showMessageDialog(this, "Thêm mới thành công!");
                        xoatrang();
                    }
                }
                st.close();
            }
            conn.close();
            rs.close();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cmdthem1ActionPerformed

    private void cmdsua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdsua1ActionPerformed
        try {
            conn = DBKetnoi.getConnection();
            if (txthnv.getText().equals("") || txtgt.getText().equals("") || txtgt.getText().equals("") || txtns.getText().equals("") 
                    || txtnoisinh.getText().equals("") || txtdc.getText().equals("") || txtsdtnv.getText().equals("")) {
                JOptionPane.showConfirmDialog(this, "Bạn cần nhập đủ dữ liệu");
            } else {
                Statement st = conn.createStatement();
                String sql = "UPDATE NHANVIEN SET HONV = N'" + txthnv.getText() + "', TENNV = N'" + txttnv.getText() + 
                        "', PHAI = N'" + txtgt.getText() + "', NGAYSINH = N'" + txtns.getText() + "', NOISINH = N'" + txtnoisinh.getText() + 
                        "', DIACHI = N'" + txtdc.getText() + "', SDT = N'" + txtsdtnv.getText() + "' WHERE MANV = N'" + txtmnv.getText() + "'";
                st = conn.createStatement();
                int kg = st.executeUpdate(sql);
                if (kg > 0) {
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
                    xoatrang();
                }
                st.close();
            }
            conn.close();
            rs.close();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cmdsua1ActionPerformed

    private void cmdxoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdxoa1ActionPerformed
        try {
            conn = DBKetnoi.getConnection();
            String sql = "DELETE NHANVIEN WHERE MANV = N'" + txtmnv.getText() + "'";
            Statement st = conn.createStatement();
            int chk = JOptionPane.showConfirmDialog(this, "Bạn có chắc xóa chứ?", "Thông báo", JOptionPane.YES_NO_OPTION);
            if (chk == JOptionPane.YES_NO_OPTION) {
                st.executeUpdate(sql);
                xoatrang();
                JOptionPane.showMessageDialog(this, "Xóa thành công!");
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_cmdxoa1ActionPerformed

    private void cmdtimkiem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdtimkiem1ActionPerformed
        int size = TableNHANVIEN.getRowCount();
        String manv = JOptionPane.showInputDialog(this, "Nhập vào Mã Nhân Viên cần tìm:");
        for (int i = 0; i < size; i++) {
            if (TableNHANVIEN.getValueAt(i, 0).toString().equalsIgnoreCase(manv)) {
                JOptionPane.showMessageDialog(this, "Tìm kiếm thành công!");
                txtmnv.setEnabled(false);
                TableNHANVIEN.setRowSelectionInterval(i, i);
                break;
            }
        }
    }//GEN-LAST:event_cmdtimkiem1ActionPerformed

    private void TableNHANVIENMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableNHANVIENMouseClicked
        int x = TableNHANVIEN.getSelectedRow();
        if (x >= 0) {
            txtmnv.setText(TableNHANVIEN.getValueAt(x, 0) + "");
            txthnv.setText(TableNHANVIEN.getValueAt(x, 1) + "");
            txttnv.setText(TableNHANVIEN.getValueAt(x, 2) + "");
            txtgt.setText(TableNHANVIEN.getValueAt(x, 3) + "");
            txtns.setText(TableNHANVIEN.getValueAt(x, 4) + "");
            txtnoisinh.setText(TableNHANVIEN.getValueAt(x, 5) + "");
            txtdc.setText(TableNHANVIEN.getValueAt(x, 6) + "");
            txtsdtnv.setText(TableNHANVIEN.getValueAt(x, 7) + "");
            txtmnv.setEnabled(false);
        }
    }//GEN-LAST:event_TableNHANVIENMouseClicked
    public void getSelectFirst() {
        int selectedRow = 0;
        txtmnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 0).toString());
        txthnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 1).toString());
        txttnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 2).toString());
        txtgt.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 3).toString());
        txtns.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 4).toString());
        txtnoisinh.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 5).toString());
        txtdc.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 6).toString());
        txtsdtnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 7).toString());
        TableNHANVIEN.setRowSelectionInterval(0, 0);
    }

    public void getSelectPrevious() {
        if (TableNHANVIEN.getSelectedRow() >= 1) {
            int selectedRow = TableNHANVIEN.getSelectedRow() - 1;
            txtmnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 0) + "");
            txthnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 1) + "");
            txttnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 2) + "");
            txtgt.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 3) + "");
            txtns.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 4) + "");
            txtnoisinh.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 5) + "");
            txtdc.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 6) + "");
            txtsdtnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 7) + "");
            TableNHANVIEN.setRowSelectionInterval(selectedRow, selectedRow);
        }
    }

    public void getSelectNext() {
        if (TableNHANVIEN.getSelectedRow() < TableNHANVIEN.getRowCount() - 1) {
            int selectedRow = TableNHANVIEN.getSelectedRow() + 1;
            txtmnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 0) + "");
            txthnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 1) + "");
            txttnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 2) + "");
            txtgt.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 3) + "");
            txtns.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 4) + "");
            txtnoisinh.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 5) + "");
            txtdc.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 6) + "");
            txtsdtnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 7) + "");
            TableNHANVIEN.setRowSelectionInterval(selectedRow, selectedRow);
        }
    }

    public void getSelectLast() {
        int selectedRow = TableNHANVIEN.getRowCount() - 1;
        txtmnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 0).toString());
        txthnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 1).toString());
        txttnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 2).toString());
        txtgt.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 3).toString());
        txtns.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 4).toString());
        txtnoisinh.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 5).toString());
        txtdc.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 6).toString());
        txtsdtnv.setText(TableNHANVIEN.getValueAt(TableNHANVIEN.getSelectedRow(), 7).toString());
        TableNHANVIEN.setRowSelectionInterval(selectedRow, selectedRow);
    }
    private void cmddau1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmddau1ActionPerformed
        getSelectFirst();
    }//GEN-LAST:event_cmddau1ActionPerformed

    private void cmdtrai1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdtrai1ActionPerformed
        getSelectPrevious();
    }//GEN-LAST:event_cmdtrai1ActionPerformed

    private void cmdphai1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdphai1ActionPerformed
        getSelectNext();
    }//GEN-LAST:event_cmdphai1ActionPerformed

    private void cmdcuoi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdcuoi1ActionPerformed
        getSelectLast();
    }//GEN-LAST:event_cmdcuoi1ActionPerformed

    private void cmdtailai1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdtailai1ActionPerformed
        loadBang();
        xoatrang();
    }//GEN-LAST:event_cmdtailai1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableNHANVIEN;
    private javax.swing.JButton cmdcuoi1;
    private javax.swing.JButton cmddau1;
    private javax.swing.JButton cmdphai1;
    private javax.swing.JButton cmdsua1;
    private javax.swing.JButton cmdtailai1;
    private javax.swing.JButton cmdthem1;
    private javax.swing.JButton cmdtimkiem1;
    private javax.swing.JButton cmdtrai1;
    private javax.swing.JButton cmdxoa1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpnnv;
    private javax.swing.JTextField txtdc;
    private javax.swing.JTextField txtgt;
    private javax.swing.JTextField txthnv;
    private javax.swing.JTextField txtmnv;
    private javax.swing.JTextField txtnoisinh;
    private javax.swing.JTextField txtns;
    private javax.swing.JTextField txtsdtnv;
    private javax.swing.JTextField txttnv;
    // End of variables declaration//GEN-END:variables

}
